server_names_hash_bucket_size 128;

server {
    server_name %DOMAIN%;
    listen [::]:4002 ssl ipv6only=on;
    listen 4002 ssl;

     # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/%DOMAIN%/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/%DOMAIN%/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/%DOMAIN%/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://127.0.0.1:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

server {
    server_name %DOMAIN%;
    listen [::]:4003 ssl ipv6only=on;
    listen 4003 ssl;

     # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/%DOMAIN%/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/%DOMAIN%/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/%DOMAIN%/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://127.0.0.1:8002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

server {
    server_name %DOMAIN%;
    listen [::]:4004 ssl ipv6only=on;
    listen 4004 ssl;

     # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/%DOMAIN%/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/%DOMAIN%/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/%DOMAIN%/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://127.0.0.1:8083;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}


server {
    server_name %DOMAIN%;
    listen [::]:4005 ssl ipv6only=on;
    listen 4005 ssl;

     # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/%DOMAIN%/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/%DOMAIN%/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/%DOMAIN%/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://127.0.0.1:8084;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

server {
    server_name %DOMAIN%; # managed by Certbot
    #location / {
    #    proxy_pass http://127.0.0.1:8080;
    #    proxy_set_header Host $host;
    #    proxy_cache_bypass $http_upgrade;
    #}

    #location / {
    #    add_header Content-Type text/html;
    #    return 200 '<html><body>This peer has the address <b>/dns4/%DOMAIN%/tcp/4002/wss/p2p/%IPFS_ID%</b></body></html>';
    #}
    
    root /usr/share/nginx/html;
    index index.html index.htm;

    location / {
        try_files $uri $uri/ =404;
    }
    
    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot

     # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/%DOMAIN%/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/%DOMAIN%/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/%DOMAIN%/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;
}
server {
    server_name %DOMAIN%;
    listen [::]:9002 ssl ipv6only=on;
    listen 9002 ssl;

     # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/%DOMAIN%/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/%DOMAIN%/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/%DOMAIN%/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://127.0.0.1:8082;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

server {
    if ($host = %DOMAIN%) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80 ;
    listen [::]:80 ;
    server_name %DOMAIN%;
    return 404; # managed by Certbot
}